---
import BlogInfo from "../components/BlogInfo.astro";
import TextLink from "../components/TextLink.astro";
import PageLayout from "../layouts/PageLayout.astro";
import { getCollection } from "astro:content";

const allBlogPosts = await getCollection("blog");
const articlesCollection = await getCollection("articles");

// ブログポストを統一フォーマットに変換
const blogItems = allBlogPosts.map((post) => ({
  title: post.data.title,
  publishedDate: post.data.publishedDate,
  tags: post.data.tags || [],
  url: `/blog/${post.id}`,
  media: "blog" as const,
}));

// 記事を統一フォーマットに変換
const articleItems = articlesCollection.map((article) => ({
  title: article.data.title,
  publishedDate: article.data.publishedDate,
  tags: article.data.tags || [],
  url: article.data.url,
  media: article.data.media,
}));

// 全アイテムを結合して日付順にソート
const allItems = [...blogItems, ...articleItems];
const sortedItems = allItems
  .sort((a, b) => Date.parse(b.publishedDate) - Date.parse(a.publishedDate))
  .slice(0, 5);

// タグの使用回数を集計（ブログポストと記事の両方から）
const tagPercentage = [...blogItems, ...articleItems].reduce((acc, item) => {
  if (item.tags) {
    item.tags.map((tag: string) => {
      acc.set(
        tag,
        Math.trunc((((acc.get(tag) || 0) + 1) / allItems.length) * 100),
      );
    });
  }
  return acc;
}, new Map<string, number>());

// 使用回数でソートしてトップ5を取得
const topTags = Array.from(tagPercentage.entries())
  .sort((a, b) => b[1] - a[1])
  .slice(0, 5) as [string, number][];
---

<PageLayout>
  <section class="my-8">
    <h2 class="text-blue-white mb-2 text-2xl">Recent posts</h2>
    <ul>
      {
        sortedItems.map((item) => (
          <li class="text-md text-blue-white mb-2 flex flex-col">
            <div class="flex items-center gap-2">
              <TextLink
                label={item.title}
                href={item.url}
                target={item.media !== "blog" ? "_blank" : undefined}
              />
              {item.media !== "blog" && (
                <span class="text-sm opacity-70">({(item as any).media})</span>
              )}
            </div>
            <BlogInfo publishedDate={item.publishedDate} tags={item.tags} />
          </li>
        ))
      }
    </ul>
    <p class="text-blue-white mt-4 text-sm">
      <TextLink label="View all posts..." href="/blog" />
    </p>
  </section>
  <section class="my-8">
    <h2 class="text-blue-white mb-2 text-2xl">Recently used tags</h2>
    <ul class="list-inside list-disc">
      {
        topTags.map(([tag, percent]) => (
          <li class="text-md text-blue-white mb-1">
            {tag}: {percent} %
          </li>
        ))
      }
    </ul>
    {
      topTags.length === 0 && (
        <p class="text-blue-white text-sm">No tags found.</p>
      )
    }
    <p class="text-blue-white mt-4 text-sm">
      <TextLink label="View all tags..." href="/tags" />
    </p>
  </section>
</PageLayout>
