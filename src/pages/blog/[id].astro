---
import { getCollection, render } from "astro:content";
import BlogLayout from "../../layouts/BlogLayout.astro";
import BlogInfo from "../../components/BlogInfo.astro";
import { isOutdated } from "../../libs";

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((post) => ({
    params: { id: post.id },
    props: { post },
  }));
}
const { post } = Astro.props;
// post.data.lastEditedDateが1年以上前なのかを比較する
const needOutdatedNotice = isOutdated(post);
const { Content } = await render(post);
---

<BlogLayout
  breadcrumbs={[{ label: "ブログ", href: "/blog" }, post.data.title]}
  id={post.id}
>
  <h1>{post.data.title}</h1>
  <BlogInfo publishedDate={post.data.publishedDate} tags={post.data.tags} />
  {
    needOutdatedNotice && (
      <div class="bg-dark-blue text-blue-white my-5 rounded-sm p-2 text-xs">
        この記事は1年以上更新されていません。情報が古くなっている場合があるのでご注意ください。
      </div>
    )
  }
  <Content />
</BlogLayout>
