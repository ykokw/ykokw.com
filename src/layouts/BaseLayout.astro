---
import "../styles/global.css";
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import { iconNameSet } from "../constants/iconName";

interface Props {
  breadcrumbs?: (string | { label: string; href: string })[];
  ogpPath?: string;
}

const { breadcrumbs = [], ogpPath } = Astro.props;
const ogpImageUrl = ogpPath
  ? new URL(ogpPath, Astro.site)
  : new URL("/images/ogp.png", Astro.site);
const breadcrumbsText = breadcrumbs
  .map((crumb) => (typeof crumb === "string" ? crumb : crumb.label))
  .join(" / ");
const title = `Yuki Okawa (@ykokw) | ${breadcrumbsText.length > 0 ? breadcrumbsText : "Home"}`;

const iconNameParams = new URLSearchParams({
  family: "Material Symbols Outlined",
  icon_names: Array.from(iconNameSet).join(","),
  display: "block",
});
---

<!doctype html>
<html lang="ja" class="bg-midnight h-dvh h-screen font-sans">
  <head prefix="og: https://ogp.me/ns/website#">
    <meta charset="UTF-8" />
    <meta name="description" content="Yuki Okawa's Home page" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link
      href={`https://fonts.googleapis.com/css2?${iconNameParams.toString()}`}
      rel="stylesheet"
    />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    <meta property="og:title" content={title} />
    <meta property="og:type" content="website" />
    <meta property="og:url" content={Astro.site} />
    <meta property="og:image" content={ogpImageUrl} />
  </head>
  <body
    class="mx-auto flex min-h-dvh w-4xl max-w-full flex-col overflow-y-auto px-2"
  >
    <Header breadcrumbs={breadcrumbs} />
    <slot />
    <Footer />
  </body>
</html>
